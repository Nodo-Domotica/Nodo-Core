<?xml version="1.0" encoding="UTF-8" ?>
<EventGhost Name="Configuration Tree" Expanded="True" Version="1462" Guid="{CB13A2FE-0DDC-49C7-8B63-550A34DACD57}" Time="1291417317.75">
    <Autostart Name="Autostart">
        <Plugin File="Serial" Identifier="Serial">
            gAIoSwJNAEtLA0sASwBLAYhYAgAAAFxucQBYBgAAAE5vZG8tMXEBSwB0cQIu
        </Plugin>
        <Action Name="Even wachten, Nodo moet settings laden.">
            EventGhost.Wait(3.0)
        </Action>
    </Autostart>
    <Folder Name="Nodo">
        <Folder Name="StatusEvent">
            <Macro Name="Settings">
                <Action>
                    Serial.Write(u'SendStatus Unit;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus Simulate;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus Trace;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus ClockSetDOW;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus ClockSetYear;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus ClockSetDate;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus ClockSetTime;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus ClockDaylight;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus DaylightSaving;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus ReceiveSettings;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus DivertSettings;')
                </Action>
                <Action>
                    Serial.Write(u'SendStatus WaitFreeRF;')
                </Action>
            </Macro>
        </Folder>
        <Folder Name="Status">
            <Macro Name="Timers">
                <Action Name="TimerSet 1">
                    Serial.Write(u'Status TimerSet 1;')
                </Action>
                <Action Name="TimerSet 2">
                    Serial.Write(u'Status TimerSet 2;')
                </Action>
                <Action Name="TimerSet 3">
                    Serial.Write(u'Status TimerSet 3;')
                </Action>
                <Action Name="TimerSet 4">
                    Serial.Write(u'Status TimerSet 4;')
                </Action>
                <Action Name="TimerSet 5">
                    Serial.Write(u'Status TimerSet 5;')
                </Action>
                <Action Name="TimerSet 6">
                    Serial.Write(u'Status TimerSet 6;')
                </Action>
                <Action Name="TimerSet 7">
                    Serial.Write(u'Status TimerSet 7;')
                </Action>
                <Action Name="TimerSet 8">
                    Serial.Write(u'Status TimerSet 8;')
                </Action>
                <Action Name="TimerSet 9">
                    Serial.Write(u'Status TimerSet 9;')
                </Action>
                <Action Name="TimerSet 10">
                    Serial.Write(u'Status TimerSet 10;')
                </Action>
                <Action Name="TimerSet 11">
                    Serial.Write(u'Status TimerSet 11;')
                </Action>
                <Action Name="TimerSet 12">
                    Serial.Write(u'Status TimerSet 12;')
                </Action>
                <Action Name="TimerSet 13">
                    Serial.Write(u'Status TimerSet 13;')
                </Action>
                <Action Name="TimerSet 14">
                    Serial.Write(u'Status TimerSet 14;')
                </Action>
                <Action Name="TimerSet 15">
                    Serial.Write(u'Status TimerSet 15;')
                </Action>
            </Macro>
            <Macro Name="Variabelen">
                <Action Name="VariableSet 1">
                    Serial.Write(u'Status VariableSet 1;')
                </Action>
                <Action Name="VariableSet 2">
                    Serial.Write(u'Status VariableSet 2;')
                </Action>
                <Action Name="VariableSet 3">
                    Serial.Write(u'Status VariableSet 3;')
                </Action>
                <Action Name="VariableSet 4">
                    Serial.Write(u'Status VariableSet 4;')
                </Action>
                <Action Name="VariableSet 5">
                    Serial.Write(u'Status VariableSet 5;')
                </Action>
                <Action Name="VariableSet 6">
                    Serial.Write(u'Status VariableSet 6;')
                </Action>
                <Action Name="VariableSet 7">
                    Serial.Write(u'Status VariableSet 7;')
                </Action>
                <Action Name="VariableSet 8">
                    Serial.Write(u'Status VariableSet 8;')
                </Action>
                <Action Name="VariableSet 9">
                    Serial.Write(u'Status VariableSet 9;')
                </Action>
                <Action Name="VariableSet 10">
                    Serial.Write(u'Status VariableSet 10;')
                </Action>
                <Action Name="VariableSet 11">
                    Serial.Write(u'Status VariableSet 11;')
                </Action>
                <Action Name="VariableSet 12">
                    Serial.Write(u'Status VariableSet 12;')
                </Action>
                <Action Name="VariableSet 13">
                    Serial.Write(u'Status VariableSet 13;')
                </Action>
                <Action Name="VariableSet 14">
                    Serial.Write(u'Status VariableSet 14;')
                </Action>
                <Action Name="VariableSet 15">
                    Serial.Write(u'Status VariableSet 15;')
                </Action>
            </Macro>
            <Macro Name="Settings">
                <Action Name="Unit">
                    Serial.Write(u'Status Unit;')
                </Action>
                <Action Name="Simulate">
                    Serial.Write(u'Status Simulate;')
                </Action>
                <Action Name="Trace">
                    Serial.Write(u'Status Trace;')
                </Action>
                <Action Name="Dow">
                    Serial.Write(u'Status ClockSetDOW;')
                </Action>
                <Action Name="Year">
                    Serial.Write(u'Status ClockSetYear;')
                </Action>
                <Action Name="DATE">
                    Serial.Write(u'Status ClockSetDate;')
                </Action>
                <Action Name="TIME">
                    Serial.Write(u'Status ClockSetTime;')
                </Action>
                <Action>
                    Serial.Write(u'Status DaylightSaving;')
                </Action>
                <Action Name="ClockDaylight">
                    Serial.Write(u'Status ClockDaylight;')
                </Action>
                <Action Name="AnalyseSettings">
                    Serial.Write(u'Status ReceiveSettings;')
                </Action>
                <Action Name="TransmitSettings">
                    Serial.Write(u'Status TransmitSettings;')
                </Action>
                <Action Name="WaitFreeRF">
                    Serial.Write(u'Status WaitFreeRF;')
                </Action>
            </Macro>
            <Macro Name="Wired">
                <Action Name="WiredOut">
                    Serial.Write(u'Status WiredOut 1;')
                </Action>
                <Action Name="WiredOut">
                    Serial.Write(u'Status WiredOut 2;')
                </Action>
                <Action Name="WiredOut">
                    Serial.Write(u'Status WiredOut 3;')
                </Action>
                <Action Name="WiredOut">
                    Serial.Write(u'Status WiredOut 4;')
                </Action>
                <Action Name="WiredIn">
                    Serial.Write(u'Status WiredIn 1;')
                </Action>
                <Action Name="WiredIn">
                    Serial.Write(u'Status WiredIn 2;')
                </Action>
                <Action Name="WiredIn">
                    Serial.Write(u'Status WiredIn 3;')
                </Action>
                <Action Name="WiredIn">
                    Serial.Write(u'Status WiredIn 4;')
                </Action>
                <Action Name="WiredAnalog">
                    Serial.Write(u'Status WiredAnalog 1;')
                </Action>
                <Action Name="WiredAnalog">
                    Serial.Write(u'Status WiredAnalog 2;')
                </Action>
                <Action Name="WiredAnalog">
                    Serial.Write(u'Status WiredAnalog 3;')
                </Action>
                <Action Name="WiredAnalog">
                    Serial.Write(u'Status WiredAnalog 4;')
                </Action>
                <Action Name="WiredThreshold">
                    Serial.Write(u'Status WiredThreshold 1;')
                </Action>
                <Action Name="WiredThreshold">
                    Serial.Write(u'Status WiredThreshold 2;')
                </Action>
                <Action Name="WiredThreshold">
                    Serial.Write(u'Status WiredThreshold 3;')
                </Action>
                <Action Name="WiredThreshold">
                    Serial.Write(u'Status WiredThreshold 4;')
                </Action>
                <Action Name="WiredSmittTrigger">
                    Serial.Write(u'Status WiredSmittTrigger 1;')
                </Action>
                <Action Name="WiredSmittTrigger">
                    Serial.Write(u'Status WiredSmittTrigger 2;')
                </Action>
                <Action Name="WiredSmittTrigger">
                    Serial.Write(u'Status WiredSmittTrigger 3;')
                </Action>
                <Action Name="WiredSmittTrigger">
                    Serial.Write(u'Status WiredSmittTrigger 4;')
                </Action>
                <Action Name="WiredPullUp">
                    Serial.Write(u'Status WiredPullUp 1;')
                </Action>
                <Action Name="WiredPullUp">
                    Serial.Write(u'Status WiredPullUp 2;')
                </Action>
                <Action Name="WiredPullUp">
                    Serial.Write(u'Status WiredPullUp 3;')
                </Action>
                <Action Name="WiredPullUp">
                    Serial.Write(u'Status WiredPullUp 4;')
                </Action>
            </Macro>
            <Macro Name="Eventlist">
                <Action Name="EventlistShow">
                    Serial.Write(u'EventlistShow;')
                </Action>
                <Action Name="EventlistErase">
                    Serial.Write(u'EventlistErase;')
                </Action>
            </Macro>
        </Folder>
        <Folder Name="Commando's">
            <Macro Name="Besturing">
                <Action Name="Reset">
                    Serial.Write(u'Reset;')
                </Action>
                <Action Name="Simulate=On">
                    Serial.Write(u'Simulate On;')
                </Action>
                <Action Name="Simulate=Off">
                    Serial.Write(u'Simulate Off;')
                </Action>
                <Action Name="Trace On (trace informatie)">
                    Serial.Write(u'Trace On,Off;')
                </Action>
                <Action Name="Trace On (trace informatie + tijdstippen)">
                    Serial.Write(u'Trace On,On;')
                </Action>
                <Action Name="Trace On (tijdstippen)">
                    Serial.Write(u'Trace Off,On;')
                </Action>
                <Action Name="Trace Off">
                    Serial.Write(u'Trace Off,Off;')
                </Action>
            </Macro>
            <Macro Name="Multi Nodo">
                <Action Name="Unit 1">
                    Serial.Write(u'Unit 1;')
                </Action>
                <Action Name="Unit 2">
                    Serial.Write(u'Unit 2;')
                </Action>
                <Action Name="Unit 3">
                    Serial.Write(u'Unit 3;')
                </Action>
                <Action Name="Divert 0">
                    Serial.Write(u'Divert 0;')
                </Action>
                <Action Name="Divert 1">
                    Serial.Write(u'Divert 1;')
                </Action>
                <Action Name="Divert 2">
                    Serial.Write(u'Divert 2,1;')
                </Action>
                <Action Name="Divert 8">
                    Serial.Write(u'Divert 8;')
                </Action>
                <Action Name="Sound">
                    Serial.Write(u'Sound 3;')
                </Action>
            </Macro>
            <Macro Name="Wired">
                <Action Name="WiredOut 1,On">
                    Serial.Write(u'WiredOut 1,On;')
                </Action>
                <Action Name="WiredOut 1,Off">
                    Serial.Write(u'WiredOut 1,Off;')
                </Action>
                <Action Name="WiredOut 2,On">
                    Serial.Write(u'WiredOut 2,On;')
                </Action>
                <Action Name="WiredOut 2,Off">
                    Serial.Write(u'WiredOut 2,Off;')
                </Action>
                <Action Name="WiredOut 3,On">
                    Serial.Write(u'WiredOut 3,On;')
                </Action>
                <Action Name="WiredOut 3,Off">
                    Serial.Write(u'WiredOut 3,Off;')
                </Action>
                <Action Name="WiredOut 4,On">
                    Serial.Write(u'WiredOut 4,On;')
                </Action>
                <Action Name="WiredOut 4,Off">
                    Serial.Write(u'WiredOut 4,Off;')
                </Action>
            </Macro>
            <Macro Name="RawSignal">
                <Action Name="RawsignalGet">
                    Serial.Write(u'RawsignalGet;')
                </Action>
            </Macro>
            <Macro Name="IR/RF overige commando's">
                <Action Name="WaitFreeRF bij reeks signalen">
                    Serial.Write(u'WaitFreeRF Series;')
                </Action>
                <Action Name="WaitFreeRF bij ieder te verzenden signaal">
                    Serial.Write(u'WaitFreeRF All;')
                </Action>
                <Action Name="WaitFreeRF uit">
                    Serial.Write(u'WaitFreeRF Off;')
                </Action>
                <Action>
                    Serial.Write(u'RawsignalCopy 1,32;')
                </Action>
            </Macro>
            <Macro Name="Eventlist">
                <Action Name="EventlistErase alles">
                    Serial.Write(u'EventlistErase;')
                </Action>
                <Action Name="EventlistShow">
                    Serial.Write(u'EventlistShow; ')
                </Action>
            </Macro>
            <Macro Name="Alarm">
                <Action Name="Alarm beep">
                    Serial.Write(u'Sound;')
                </Action>
                <Action Name="Alarm four beeps">
                    Serial.Write(u'sound 1;')
                </Action>
                <Action Name="Alarm Whoop Up">
                    Serial.Write(u'sound 02;')
                </Action>
                <Action Name="Alarm Whoop Down">
                    Serial.Write(u'Sound 03;')
                </Action>
                <Action Name="Alarm s.o.s.">
                    Serial.Write(u'Sound 04;')
                </Action>
                <Action Name="Alarm ding-dong">
                    Serial.Write(u'Sound 05;')
                </Action>
                <Action Name="Alarm phone">
                    Serial.Write(u'Sound 6;')
                </Action>
            </Macro>
            <Macro Name="Variabelen">
                <Action Name="Variabele_1 = 0">
                    Serial.Write(u'VariableSet 1,0;')
                </Action>
                <Action Name="Variabele_1 = 1">
                    Serial.Write(u'VariableSet 1,1;')
                </Action>
                <Action Name="Variabele_1 = FF">
                    Serial.Write(u'VariableSet 1,0xFF;')
                </Action>
                <Action Name="Variabele_2 = 3">
                    Serial.Write(u'VariableSet 2,3;')
                </Action>
                <Action Name="Variabele_F = 0">
                    Serial.Write(u'VariableSet 0xF,0;')
                </Action>
                <Action Name="Variabele_F = FF">
                    Serial.Write(u'VariableSet 0xF,0xFF;')
                </Action>
                <Action Name="VariableClear alles">
                    Serial.Write(u'VariableClear 0;')
                </Action>
                <Action Name="Variabele 1 met één ophogen">
                    Serial.Write(u'VariableInc 1,1;')
                </Action>
            </Macro>
            <Macro Name="Klok">
                <Action Name="Delay=5 sec.">
                    Serial.Write(u'Delay 5;')
                </Action>
                <Action Name="ClockTime &lt;uren&gt; &lt;minuten&gt;">
                    Serial.Write(u'ClockSetTime 23 33;')
                </Action>
                <Action Name="ClockDate &lt;datum&gt; &lt;maand&gt;">
                    Serial.Write(u'ClockSetDate 12 11;')
                </Action>
                <Action Name="ClockDOW &lt;zondag=1&gt;">
                    Serial.Write(u'ClockSetDow 6;')
                </Action>
                <Action Name="ClockYear 2010">
                    Serial.Write(u'ClockSetYear 20 10;')
                </Action>
                <Action Name="SimulateDay">
                    Serial.Write(u'SimulateDay;')
                </Action>
                <Action Name="SimulateDay 7 (hele week)">
                    Serial.Write(u'SimulateDay 7;')
                </Action>
            </Macro>
            <Macro Name="Timers">
                <Action Name="Timer 1 Random met maximaal 60 min.">
                    Serial.Write(u'TimerRandom 1 60 ;')
                </Action>
                <Action Name="TimerReset allemaal">
                    Serial.Write(u'TimerReset;')
                </Action>
                <Action Name="TimerReset 1">
                    Serial.Write(u'TimerReset 1;')
                </Action>
                <Action Name="TimerReset 15">
                    Serial.Write(u'TimerReset 15;')
                </Action>
                <Action Name="Timer 1, 0 minuut">
                    Serial.Write(u'TimerSet 1,0;')
                </Action>
                <Action Name="Timer 1, 1 minuut">
                    Serial.Write(u'TimerSet 1,1;')
                </Action>
                <Action Name="Timer 15, 15 minuut">
                    Serial.Write(u'TimerSet 15,15;')
                </Action>
            </Macro>
        </Folder>
        <Folder Name="Voorbeelden">
            <Macro Name="Voorbeeld-1: Meerdere lampen schakelen met één druk op de knop">
                <Action Name="EventlistErase">
                    Serial.Write(u'EventlistErase;')
                </Action>
                <Action Name="Als event P1=aan ontvangen DAN A1=aan verzenden">
                    Serial.Write(u'EventlistWrite;KAKU P1,On; SendKAKU A1,on;')
                </Action>
                <Action Name="Als event P1=aan ontvangen DAN A2=aan verzenden">
                    Serial.Write(u'EventlistWrite;KAKU P1,On; SendKAKU A2,on;')
                </Action>
                <Action Name="Als event P1=aan ontvangen DAN A3=aan verzenden">
                    Serial.Write(u'EventlistWrite;KAKU P1,On; SendKAKU A3,on;')
                </Action>
                <Action Name="Als event P1=uit ontvangen DAN A1=uit verzenden">
                    Serial.Write(u'EventlistWrite;KAKU P1,Off; SendKAKU A1,off;')
                </Action>
                <Action Name="Als event P1=uit ontvangen DAN A2=uit verzenden">
                    Serial.Write(u'EventlistWrite;KAKU P1,Off; SendKAKU A2,off;')
                </Action>
                <Action Name="Als event P1=uit ontvangen DAN A3=uit verzenden">
                    Serial.Write(u'EventlistWrite;KAKU P1,Off; SendKAKU A3,off;')
                </Action>
                <Action Name="EventlistShow">
                    Serial.Write(u'EventlistShow;')
                </Action>
            </Macro>
            <Macro Name="Voorbeeld-2: Alarmsignaal geven en lamp aan aan de deur gebeld wordt">
                <Action Name="EventlistErase">
                    Serial.Write(u'EventlistErase;')
                </Action>
                <Action Name="ALS deurbel event (0x34B554CC) DAN lamp A1 inschakelen">
                    Serial.Write(u'EventlistWrite; 0x34B554CC; SendKaku A1,On;')
                </Action>
                <Action Name="ALS deurbel event (0x34B554CC) DAN geluidsignaal laten horen.">
                    Serial.Write(u'EventlistWrite; 0x34B554CC;Sound 5;')
                </Action>
                <Action Name="EventlistShow">
                    Serial.Write(u'EventlistShow;')
                </Action>
            </Macro>
            <Macro Name="Voorbeeld-3: Douche lamp en ventilator schakelen">
                <Action Name="EventlistErase">
                    Serial.Write(u'EventlistErase;')
                </Action>
                <Action Name="Als event 0xB65B8A ontvangen DAN lamp op A1 aan zetten">
                    Serial.Write(u'EventlistWrite;0xB65B8A;SendKAKU A1,on;')
                </Action>
                <Action Name="Als event 0xB65B8A ontvangen DAN ventilator op A2 aan zetten">
                    Serial.Write(u'EventlistWrite;0xB65B8A;SendKAKU A2,on;')
                </Action>
                <Action Name="Als event 0xB65B9A ontvangen DAN lamp op A1 uitzetten">
                    Serial.Write(u'EventlistWrite;0x0xB65B9A;SendKAKU A1,off;')
                </Action>
                <Action Name="Als event 0xB65B9A ontvangen DAN start timer-1 (5  minuten)">
                    Serial.Write(u'EventlistWrite;0x0xB65B9A;TimerSet 1,5;')
                </Action>
                <Action Name="Als event Timer-1=0  DAN ventilator A2 uitzetten">
                    Serial.Write(u'EventlistWrite;Timer 1,0;SendKAKU A2,Off;')
                </Action>
                <Action Name="EventlistShow">
                    Serial.Write(u'EventlistShow;')
                </Action>
            </Macro>
            <Macro Name="Voorbeeld-4: Drie keer bellen...">
                <Action Name="EventlistErase">
                    Serial.Write(u'EventlistErase;')
                </Action>
                <Action Name="ALS deurbel  DAN timer op één minuut zetten">
                    Serial.Write(u'EventlistWrite; 0x34B554CC; TimerSet 1,1;')
                </Action>
                <Action Name="ALS deurbel  DAN Variabele 1 met één ophogen">
                    Serial.Write(u'EventlistWrite; 0x34B554CC; VariableInc 1,1;')
                </Action>
                <Action Name="ALS deurbel  DAN break als variabele-1 &lt;3">
                    Serial.Write(u'EventlistWrite; 0x34B554CC; BreakOnVarLess 1,3;')
                </Action>
                <Action Name="ALS deurbel  DAN geef een alarmsignaal">
                    Serial.Write(u'EventlistWrite; 0x34B554CC; Sound 5;')
                </Action>
                <Action Name="ALS deurbel  DAN Variabele 1 weer op nul zetten">
                    Serial.Write(u'EventlistWrite; 0x34B554CC; VariableSet 1,0;')
                </Action>
                <Action Name="Timer-1 is afgelopen, dan Variabele 1 op 0 zetten">
                    Serial.Write(u'EventlistWrite; Timer 1,0; VariableSet 1,0;')
                </Action>
                <Action Name="EventlistShow">
                    Serial.Write(u'EventlistShow;')
                </Action>
            </Macro>
            <Macro Name="Voorbeeld-5: Wired IN en OUT schakelen met KAKU handzender">
                <Action Name="EventlistErase">
                    Serial.Write(u'EventlistErase;')
                </Action>
                <Action Name="Als event=(WiredIn 1,On) dan action=(KAKU P1,On)">
                    Serial.Write(u'EventlistWrite; WiredIn 1,On; SendKAKU P1,On;')
                </Action>
                <Action Name="Als event=(WiredIn 1,Off) dan action=(KAKU P1,Off)">
                    Serial.Write(u'EventlistWrite; WiredIn 1,Off; SendKAKU P1,Off;')
                </Action>
                <Action Name="Als event=(WiredIn 2,On) dan action=(KAKU P2,On)">
                    Serial.Write(u'EventlistWrite;WiredIn 2,On; SendKAKU P2,On; ')
                </Action>
                <Action Name="Als event=(WiredIn 2,Off) dan action=(KAKU P2,Off)">
                    Serial.Write(u'EventlistWrite;WiredIn 2,Off; SendKAKU P2,Off; ')
                </Action>
                <Action Name="Als event=(WiredIn 3,On) dan action=(KAKU P3,On)">
                    Serial.Write(u'EventlistWrite;WiredIn 3,On; SendKAKU P3,On; ')
                </Action>
                <Action Name="Als event=(WiredIn 3,Off) dan action=(KAKU P3,Off)">
                    Serial.Write(u'EventlistWrite; WiredIn 3,Off; SendKAKU P3,Off;')
                </Action>
                <Action Name="Als event=(WiredIn 4,On) dan action=(KAKU P4,On)">
                    Serial.Write(u'EventlistWrite;WiredIn 4,On; SendKAKU P4,On; ')
                </Action>
                <Action Name="Als event=(WiredIn 4,Off) dan action=(KAKU P4,Off)">
                    Serial.Write(u'EventlistWrite;WiredIn 4,Off; SendKAKU P4,Off; ')
                </Action>
                <Action Name="Als event=(KAKU P5,On) dan action=(WiredOut 1,On)">
                    Serial.Write(u'EventlistWrite; KAKU P5,On; WiredOut 1,On;')
                </Action>
                <Action Name="Als event=(KAKU P5,Off) dan action=(WiredOut 1,Off)">
                    Serial.Write(u'EventlistWrite; KAKU P5,Off; WiredOut 1,Off;')
                </Action>
                <Action Name="Als event=(KAKU P6,On) dan action=(WiredOut 2,On)">
                    Serial.Write(u'EventlistWrite; KAKU P6,On; WiredOut 2,On;')
                </Action>
                <Action Name="Als event=(KAKU P6,Off) dan action=(WiredOut 2,Off)">
                    Serial.Write(u'EventlistWrite; KAKU P6,Off; WiredOut 2,Off;')
                </Action>
                <Action Name="Als event=(KAKU P7,On) dan action=(WiredOut 3,On)">
                    Serial.Write(u'EventlistWrite; KAKU P7,On; WiredOut 3,On;')
                </Action>
                <Action Name="Als event=(KAKU P7,Off) dan action=(WiredOut 3,Off)">
                    Serial.Write(u'EventlistWrite; KAKU P7,Off; WiredOut 3,Off;')
                </Action>
                <Action Name="Als event=(KAKU P8,On) dan action=(WiredOut 4,On)">
                    Serial.Write(u'EventlistWrite; KAKU P8,On; WiredOut 4,On;')
                </Action>
                <Action Name="Als event=(KAKU P8,Off) dan action=(WiredOut 4,Off)">
                    Serial.Write(u'EventlistWrite; KAKU P8,Off; WiredOut 4,Off;')
                </Action>
                <Action Name="EventlistShow">
                    Serial.Write(u'EventlistShow;')
                </Action>
            </Macro>
            <Macro Name="Voorbeeld-6: UserEvent roept Userevent aan">
                <Action>
                    Serial.Write(u'EventlistErase;')
                </Action>
                <Action>
                    Serial.Write(u'EventlistWrite; UserEvent 1; UserEvent 2;')
                </Action>
                <Action>
                    Serial.Write(u'EventlistWrite; UserEvent 2; UserEvent 3;')
                </Action>
                <Action>
                    Serial.Write(u'EventlistWrite; UserEvent 3; UserEvent 4;')
                </Action>
                <Action>
                    Serial.Write(u'EventlistWrite; UserEvent 4; UserEvent 5;')
                </Action>
                <Action>
                    Serial.Write(u'EventlistWrite; UserEvent 5; Sound 3;')
                </Action>
                <Action>
                    Serial.Write(u'EventlistShow;')
                </Action>
                <Action>
                    Serial.Write(u'Trace on;')
                </Action>
                <Action>
                    Serial.Write(u'UserEvent 1;')
                </Action>
            </Macro>
        </Folder>
    </Folder>
</EventGhost>
